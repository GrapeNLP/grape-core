language: c++
sudo: required

matrix:
  fast_finish: true
  include:
  - env:
    - 'PLATFORM="Alpine 3.6"'
    - 'SH="docker exec -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir bin
    - sudo chown 100:101 bin
    - docker run -d --name build-image -u build -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-alpine:3.6 tail -f /dev/null
    - docker ps -a
    script: $SH "build/scripts/build.sh release"

  - env:
    - 'PLATFORM="Alpine 3.7"'
    - 'SH="docker exec -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir bin
    - sudo chown 100:101 bin
    - docker run -d --name build-image -u build -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-alpine:3.7 tail -f /dev/null
    - docker ps -a
    script: $SH "build/scripts/build.sh release"

  - env:
    - 'PLATFORM="Alpine 3.8"'
    - 'SH="docker exec -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir bin
    - sudo chown 100:101 bin
    - docker run -d --name build-image -u build -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-alpine:3.8 tail -f /dev/null
    - docker ps -a
    script: $SH "build/scripts/build.sh release"

  - env:
    - 'PLATFORM="MacOS 10.13"'
    os: osx
    osx_image: xcode9.3
    addons:
      homebrew:
        packages:
          - wget
          - boost
          - cmake
          - swig
          - python
        update: true
    install:
    - wget https://github.com/google/googletest/archive/release-1.8.1.tar.gz
    - tar xfz release-1.8.1.tar.gz
    - cd googletest-release-1.8.1
    - mkdir build
    - cd build
    - cmake ..
    - make
    - cp -r ../googletest/include/gtest /usr/local/include
    - cp googlemock/lib*.a /usr/local/lib
    - cp googlemock/gtest/lib*.a /usr/local/lib
    script: build/scripts/build.sh release

  - env:
    - 'PLATFORM="Ubuntu 16.04"'
    - 'SH="docker exec -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir bin
    - sudo chown 1000:1000 bin
    - docker run -d --name build-image -u build -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-ubuntu:16.04 tail -f /dev/null
    - docker ps -a
    script: $SH "build/scripts/build.sh release"

  - env:
    - 'PLATFORM="Ubuntu 18.04"'
    - 'SH="docker exec -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir bin
    - sudo chown 1000:1000 bin
    - docker run -d --name build-image -u build -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-ubuntu:18.04 tail -f /dev/null
    - docker ps -a
    script: $SH "build/scripts/build.sh release"

notifications:
  email: true
