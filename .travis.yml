language: c++
sudo: required

matrix:
  fast_finish: true
  include:
  - env:
    - 'PLATFORM="Alpine 3.10"'
    - 'ROOT_SH="docker exec -t build-image bash -c"'
    - 'BUILD_SH="docker exec -u build -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 100:101 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-alpine:3.10 tail -f /dev/null
    - docker ps -a
    script:
      - $BUILD_SH "delivery/scripts/build.sh release"
      - $ROOT_SH "make -C build/release install"

  - env:
    - 'PLATFORM="Alpine 3.11"'
    - 'ROOT_SH="docker exec -t build-image bash -c"'
    - 'BUILD_SH="docker exec -u build -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 100:101 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-alpine:3.11 tail -f /dev/null
    - docker ps -a
    script:
      - $BUILD_SH "delivery/scripts/build.sh release"
      - $ROOT_SH "make -C build/release install"

  - env:
    - 'PLATFORM="Alpine 3.12"'
    - 'ROOT_SH="docker exec -t build-image bash -c"'
    - 'BUILD_SH="docker exec -u build -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 100:101 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-alpine:3.12 tail -f /dev/null
    - docker ps -a
    script:
      - $BUILD_SH "delivery/scripts/build.sh release"
      - $ROOT_SH "make -C build/release install"

  - env:
    - 'PLATFORM="Alpine 3.13"'
    - 'ROOT_SH="docker exec -t build-image bash -c"'
    - 'BUILD_SH="docker exec -u build -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 100:101 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-alpine:3.13 tail -f /dev/null
    - docker ps -a
    script:
    - $BUILD_SH "delivery/scripts/build.sh release"
    - $ROOT_SH "make -C build/release install"

  - env:
    - 'PLATFORM="Android 14 armeabi"'
    - 'SH="docker exec -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 1000:1000 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -u build -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-android-sdk:14 tail -f /dev/null
    - docker ps -a
    script: $SH "delivery/scripts/buildforandroid.sh release armeabi 14"

  - env:
    - 'PLATFORM="Android 14 arm64-v8a"'
    - 'SH="docker exec -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 1000:1000 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -u build -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-android-sdk:14 tail -f /dev/null
    - docker ps -a
    script: $SH "delivery/scripts/buildforandroid.sh release arm64-v8a 14"

  - env:
    - 'PLATFORM="Android 14 armeabi-v7a"'
    - 'SH="docker exec -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 1000:1000 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -u build -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-android-sdk:14 tail -f /dev/null
    - docker ps -a
    script: $SH "delivery/scripts/buildforandroid.sh release armeabi-v7a 14"

  - env:
    - 'PLATFORM="Android 14 mips"'
    - 'SH="docker exec -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 1000:1000 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -u build -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-android-sdk:14 tail -f /dev/null
    - docker ps -a
    script: $SH "delivery/scripts/buildforandroid.sh release mips 14"

  - env:
    - 'PLATFORM="Android 14 mips64"'
    - 'SH="docker exec -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 1000:1000 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -u build -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-android-sdk:14 tail -f /dev/null
    - docker ps -a
    script: $SH "delivery/scripts/buildforandroid.sh release mips64 14"

  - env:
    - 'PLATFORM="Android 14 x86"'
    - 'SH="docker exec -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 1000:1000 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -u build -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-android-sdk:14 tail -f /dev/null
    - docker ps -a
    script: $SH "delivery/scripts/buildforandroid.sh release x86 14"

  - env:
    - 'PLATFORM="Android 14 x86_64"'
    - 'SH="docker exec -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 1000:1000 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-android-sdk:14 tail -f /dev/null
    - docker ps -a
    script: $SH "delivery/scripts/buildforandroid.sh release x86_64 14"

  - env:
    - 'PLATFORM="CentOS 7"'
    - 'ROOT_SH="docker exec -t build-image bash -c"'
    - 'BUILD_SH="docker exec -u build -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 1000:1000 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-centos:7 tail -f /dev/null
    - docker ps -a
    script:
    - $BUILD_SH "delivery/scripts/build.sh release"
    - $ROOT_SH "make -C build/release install"

  - env:
    - 'PLATFORM="CentOS 8"'
    - 'ROOT_SH="docker exec -t build-image bash -c"'
    - 'BUILD_SH="docker exec -u build -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 1000:1000 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -u build -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-centos:8 tail -f /dev/null
    - docker ps -a
    script:
      - $BUILD_SH "delivery/scripts/build.sh release"
      - $ROOT_SH "make -C build/release install"

  - env:
    - 'PLATFORM="MacOS 10.14.6"'
    os: osx
    osx_image: xcode11.3
    addons:
      homebrew:
        packages:
        - wget
        - boost
        - cmake
        - swig
        - python
        - doxygen
        - graphviz
        update: true
    script:
    - delivery/scripts/build.sh release
    - sudo make -C build/release install

  - env:
    - 'PLATFORM="Ubuntu 16.04"'
    - 'ROOT_SH="docker exec -t build-image bash -c"'
    - 'BUILD_SH="docker exec -u build -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 1000:1000 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-ubuntu:16.04 tail -f /dev/null
    - docker ps -a
    script:
    - $BUILD_SH "delivery/scripts/build.sh release"
    - $ROOT_SH "dpkg -i build/release/package/*.deb"

  - env:
    - 'PLATFORM="Ubuntu 18.04"'
    - 'ROOT_SH="docker exec -t build-image bash -c"'
    - 'BUILD_SH="docker exec -u build -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 1000:1000 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-ubuntu:18.04 tail -f /dev/null
    - docker ps -a
    script:
    - $BUILD_SH "delivery/scripts/build.sh release"
    - $ROOT_SH "dpkg -i build/release/package/*.deb"

  - env:
    - 'PLATFORM="Ubuntu 20.04"'
    - 'ROOT_SH="docker exec -t build-image bash -c"'
    - 'BUILD_SH="docker exec -u build -t build-image bash -c"'
    services: docker
    before_install:
    - mkdir build
    - sudo chown 1000:1000 build
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run -d --name build-image -v $(pwd):/home/build/grapenlp-core -w /home/build/grapenlp-core grapenlp/core-build-ubuntu:20.04 tail -f /dev/null
    - docker ps -a
    script:
    - $BUILD_SH "delivery/scripts/build.sh release"
    - $ROOT_SH "dpkg -i build/release/package/*.deb"

notifications:
  email: true
