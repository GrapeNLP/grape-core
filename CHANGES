grapenlp-core (2.7.0) stable; urgency=medium

  * Added generation of code source documentation with Doxygen
  * Added documentation binary Debian package libgrapenlp-doc
  * Added generation of binary Debian package libgrapenlp-doc to source Debian package for its publication in PPA
  * Script buildppa.sh gets the Ubuntu distribution of the running platform and passes it to cmake in order to build the corresponding source package

 -- Javier Sastre <javier.sastre@telefonica.net>  Mon, 25 Feb 2019 23:36:42 +0100

grapenlp-core (2.6.2) stable; urgency=medium

  * Improved generation of the source package for its publication in Launchpad
  * Added script delivery/scripts/buildppa.sh for generating the source package to publish in Launchpad
  * Library binary packages generated from the source package include a trigger for updating the system's library cache
  * Binary packages either generated with CPack or from the source package include more complete dependency declaration (using dh_shlibdeps auto-discovery mechanism)

 -- Javier Sastre <javier.sastre@telefonica.net>  Wed, 20 Feb 2019 17:33:56 +0100

grapenlp-core (2.6.1) stable; urgency=medium

  * Renamed default installation component as "trash" and removed it from the list of components to install in order to avoid GoogleTest files from been included in this project's packages

 -- Javier Sastre <javier.sastre@telefonica.net>  Thu, 14 Feb 2019 12:35:01 +0100

grapenlp-core (2.6.0) stable; urgency=medium

  * Added make targets package_source, package_ubuntu and dput for creating the source packages and uploading them to Launchpad
  * GoogleTest libraries are compiled as part of the project instead of expecting the static libraries to be preinstalled in the build environment (needed for compiling in Launchpad)
  * Compilation of GoogleTest libraries removed from build dockers and Travis MacOS virtual machine
  * Static libraries are installed in a subfolder "grapenlp" to avoid conflicts with other software packages
  * Library version is no longer hardcoded in the main CMakeLists.txt file but CMake grabs it from the CHANGES file
  * Upon build, executable files are put in folder bin, test executables in folder test_bin, libraries in folder lib and packages in folder package
  * Folder "build" containing the build scripts and dockers renamed as "delivery"
  * Folder "bin" containing the built files renamed as "build" (this is the typical convention)
  * Boost library version is shown when executing either the build.sh script or the buildforandroid.sh one

 -- Javier Sastre <javier.sastre@telefonica.net>  Fri, 08 Feb 2019 09:54:24 +0100

grapenlp-core (2.5.0) stable; urgency=medium

  * Added DockerFile for building the Android version for platform 14
  * Added Android compilations to .travis config file for all Android ABIs
  * Fixed bug in buildforandroid.sh which prevented from finding the BoostForBuild folder from the environment variable BOOSTFORBUILD_ROOT
  * Added target mtrace to build.sh script in order to generate binaries with memory leak verification (usage of gcc sanitizers leak and address)
  * Compilation with all warnings activated for mtrace target
  * Several unused parameter warnings corrected
  * Updated license headers (2018 -> 2019)
  * Added cmake_modules folder with modules for Debian packaging and declaration of mtrace target for simplifying main CMakeList.txt files
  * Added license headers to CMakeList.txt files
  * Moved scripts folder outside src

 -- Javier Sastre <javier.sastre@telefonica.net>  Wed, 30 Jan 2019 12:09:21 +0100

grapenlp-core (2.4.0) stable; urgency=medium

  * Refactored build scripts in build/scripts: build.sh builds the native version and buildforandroid.sh builds the Android version
  * Disabled generation of Debian packages on non-Linux systems or on MacOS (it's not supported)
  * Placed all source code folders inside a new folder src

 -- Javier Sastre <javier.sastre@telefonica.net>  Thu, 17 Jan 2019 17:12:33 +0100

grapenlp-core (2.3.0) stable; urgency=medium

  * Added SWIG autogenerated Java files to libgrapenlp-dev

 -- Javier Sastre <javier.sastre@telefonica.net>  Sat, 12 Jan 2019 14:40:00 +0100

grapenlp-core (2.2.0) stable; urgency=medium

  * Improved Debian packaging to conform with Debian standards (added copyright and changelog)
  * Added libjgrapenlp Debian package containing the Java SWIG interface for consuming the GRAPENLP engine from Java
  * Added to libgrapenlp-dev automatically generated source code files with SWIG which are to be used by pygrapenlp Python package for consuming the GRAPENLP engine from Python

 -- Javier Sastre <javier.sastre@telefonica.net>  Thu, 10 Jan 2019 09:35:02 +0100

grapenlp-core (2.1.0) stable; urgency=medium

  * Added several Dockerfiles for building docker images that contain all the needed tools for compiling grapenlp-core in different platforms, namely Alpine 3.6, Alpine 3.7, Alpine 3.8, Ubuntu 16.04 and Ubuntu 18.04.

 -- Javier Sastre <javier.sastre@telefonica.net>  Wed, 7 Nov 2018 15:51:31 +0100

grapenlp-core (2.0.2) stable; urgency=medium

  * Minor fixes to allow compilation in MacOS (tested with High Sierra)
  * Enabled compilation of Java interface (jgrapenlp)
  * Fixed warning in unicode.cpp

 -- Javier Sastre <javier.sastre@telefonica.net>  Thu, 1 Nov 2018 20:00:15 +0100

grapenlp-core (2.1.0) stable; urgency=medium

  * Added version number management in CMakefiles

 -- Javier Sastre <javier.sastre@telefonica.net>  Tue, 23 Oct 2018 18:40:14 +0200

grapenlp-core (2.0.0) stable; urgency=medium

  * Renamed all grape "stuff" (libraries, namespaces, include folders, etc.) to grapenlp to avoid collisions with other open-source projects (sorry folks, grapes are popular among the open-source community)

 -- Javier Sastre <javier.sastre@telefonica.net>  Tue, 23 Oct 2018 13:11:45 +0200

grapenlp-core (1.0.1) stable; urgency=medium

  * Corrected some typos in README.md
  * Added LICENSE file to main folder

 -- Javier Sastre <javier.sastre@telefonica.net>  Sun, 14 Oct 2018 22:58:05 +0200

grapenlp-core (1.0.0) stable; urgency=medium

  * First disclosed GrapeNLP-core version uploaded to GitHub. It is operative, though documentation is still lacking. Debug and release versions can be compiled using the script at build/scripts/build.sh. Compilation has been tested in Ubuntu and Alpine, and interfaces for Python and Java have also been developed (see modules pygrapenlp and jgrapenlp).

 -- Javier Sastre <javier.sastre@telefonica.net>  Sun, 14 Oct 2018 22:33:32 +0200
